#pragma once

#include "DomainCondition.h"
#include <engine/BasicUtilityFunction.h>
#include <engine/DefaultUtilityFunction.h>
#include <engine/UtilityFunction.h>
/*PROTECTED REGION ID(incl1555601736192) ENABLED START*/
// Add additional includes here
/*PROTECTED REGION END*/
using namespace alica;

namespace alicaAutogenerated {
/*PROTECTED REGION ID(meth1555601736192) ENABLED START*/
// Add additional options here
/*PROTECTED REGION END*/
class UtilityFunction1555601736192 : public BasicUtilityFunction {
  shared_ptr<UtilityFunction> getUtilityFunction(Plan *plan);
};
class PreCondition1558533725689 : public DomainCondition {
  bool evaluate(std::shared_ptr<RunningPlan> rp);
};
class PreCondition1558533620473 : public DomainCondition {
  bool evaluate(std::shared_ptr<RunningPlan> rp);
};
class PreCondition1558533654035 : public DomainCondition {
  bool evaluate(std::shared_ptr<RunningPlan> rp);
};
class PreCondition1558533667052 : public DomainCondition {
  bool evaluate(std::shared_ptr<RunningPlan> rp);
};
class PreCondition1560934538125 : public DomainCondition {
  bool evaluate(std::shared_ptr<RunningPlan> rp);
};
} // namespace alicaAutogenerated
