#include "Behaviours/Stop1555602210283.h"
#include <memory>

/*PROTECTED REGION ID(inccppBC1555602210283) ENABLED START*/
// Add additional includes here
/*PROTECTED REGION END*/

using namespace alica;

namespace alicaAutogenerated {
// Behaviour:Stop
// Check of RuntimeCondition - (Name): 1568119815697, (ConditionString): ,
// (Comment) : test2

/*
 * Available Vars:
 */

int count = 0;

bool RunTimeCondition1568119815697::evaluate(std::shared_ptr<RunningPlan> rp) {
  /*PROTECTED REGION ID(1568119815697) ENABLED START*/

//        auto lastCmd =
//                this->wm->rawSensorData.getAgentCmdBuffer().getLastValidContent();
//        return lastCmd.has_value() && lastCmd->cmd == control::AgentCommand::START;

//      //TODO Test what happens when runtime flips to false
//  bool randomBit = rand() % 2;
//  std::cout << "evaluate called runtimeCondition Return: " << randomBit << "\n" <<std::endl;
//  return randomBit;

//  std::cout <<"Count:" << count << "\n" <<std::endl;
//if(count <= 3){
//  count++;
  return true;
//} else{
//  return false;
//}


  /*PROTECTED REGION END*/
}
// Check of PreCondition - (Name): 1568105583307, (ConditionString):  ,
// (Comment) : test

/*
 * Available Vars:
 */
bool PreCondition1568105583307::evaluate(std::shared_ptr<RunningPlan> rp) {
  /*PROTECTED REGION ID(1568105583307) ENABLED START*/
  std::cout << "evaluate called preCondition \n" <<std::endl;
  return true;
  /*PROTECTED REGION END*/
}

} // namespace alicaAutogenerated
