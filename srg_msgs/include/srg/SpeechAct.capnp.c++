// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: SpeechAct.capnp

#include "SpeechAct.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<65> b_e7b789dc9c59b47b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123, 180,  89, 156, 220, 137, 183, 231,
     16,   0,   0,   0,   1,   0,   1,   0,
     74, 189, 120,  41,  42, 130, 159, 168,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 112, 101, 101,  99, 104,  65,  99,
    116,  46,  99,  97, 112, 110, 112,  58,
     83, 112, 101, 101,  99, 104,  65,  99,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 110, 100, 101, 114,  73,  68,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    171,  96, 200,  45, 119,  27,  93, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 101, 101,  99, 104,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     79, 203,  86, 166, 160,  78,  28, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7b789dc9c59b47b = b_e7b789dc9c59b47b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e7b789dc9c59b47b[] = {
  &s_c61c4ea0a656cb4f,
  &s_db5d1b772dc860ab,
};
static const uint16_t m_e7b789dc9c59b47b[] = {0, 2, 1};
static const uint16_t i_e7b789dc9c59b47b[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e7b789dc9c59b47b = {
  0xe7b789dc9c59b47b, b_e7b789dc9c59b47b.words, 65, d_e7b789dc9c59b47b, m_e7b789dc9c59b47b,
  2, 3, i_e7b789dc9c59b47b, nullptr, nullptr, { &s_e7b789dc9c59b47b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<30> b_c61c4ea0a656cb4f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     79, 203,  86, 166, 160,  78,  28, 198,
     16,   0,   0,   0,   2,   0,   0,   0,
     74, 189, 120,  41,  42, 130, 159, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 112, 101, 101,  99, 104,  65,  99,
    116,  46,  99,  97, 112, 110, 112,  58,
     83, 112, 101, 101,  99, 104,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 111, 114, 109,   0,   0,
    114, 101, 113, 117, 101, 115, 116,   0,
     99, 111, 109, 109,  97, 110, 100,   0, }
};
::capnp::word const* const bp_c61c4ea0a656cb4f = b_c61c4ea0a656cb4f.words;
#if !CAPNP_LITE
static const uint16_t m_c61c4ea0a656cb4f[] = {2, 0, 1};
const ::capnp::_::RawSchema s_c61c4ea0a656cb4f = {
  0xc61c4ea0a656cb4f, b_c61c4ea0a656cb4f.words, 30, nullptr, m_c61c4ea0a656cb4f,
  0, 3, nullptr, nullptr, nullptr, { &s_c61c4ea0a656cb4f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(SpeechType_c61c4ea0a656cb4f, c61c4ea0a656cb4f);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace srg {

// SpeechAct
constexpr uint16_t SpeechAct::_capnpPrivate::dataWordSize;
constexpr uint16_t SpeechAct::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SpeechAct::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SpeechAct::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

