// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ProcessCommandMsg.capnp

#ifndef CAPNP_INCLUDED_ae0df4f534e8b04f_
#define CAPNP_INCLUDED_ae0df4f534e8b04f_

#include <capnp/generated-header-support.h>

#if CAPNP_VERSION != 6001
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <capnzero/ID.capnp.h>

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(8e62669eba9a39fd);

}  // namespace schemas
}  // namespace capnp

namespace process_manager {

struct ProcessCommandMsg {
  ProcessCommandMsg() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(8e62669eba9a39fd, 1, 5)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class ProcessCommandMsg::Reader {
public:
  typedef ProcessCommandMsg Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasSenderID() const;
  inline  ::capnzero::ID::Reader getSenderID() const;

  inline  ::uint8_t getCmd() const;

  inline bool hasReceiverID() const;
  inline  ::capnzero::ID::Reader getReceiverID() const;

  inline bool hasRobotIds() const;
  inline  ::capnp::List< ::capnzero::ID>::Reader getRobotIds() const;

  inline bool hasProcessKeys() const;
  inline  ::capnp::List< ::int32_t>::Reader getProcessKeys() const;

  inline bool hasParamSets() const;
  inline  ::capnp::List< ::int32_t>::Reader getParamSets() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ProcessCommandMsg::Builder {
public:
  typedef ProcessCommandMsg Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasSenderID();
  inline  ::capnzero::ID::Builder getSenderID();
  inline void setSenderID( ::capnzero::ID::Reader value);
  inline  ::capnzero::ID::Builder initSenderID();
  inline void adoptSenderID(::capnp::Orphan< ::capnzero::ID>&& value);
  inline ::capnp::Orphan< ::capnzero::ID> disownSenderID();

  inline  ::uint8_t getCmd();
  inline void setCmd( ::uint8_t value);

  inline bool hasReceiverID();
  inline  ::capnzero::ID::Builder getReceiverID();
  inline void setReceiverID( ::capnzero::ID::Reader value);
  inline  ::capnzero::ID::Builder initReceiverID();
  inline void adoptReceiverID(::capnp::Orphan< ::capnzero::ID>&& value);
  inline ::capnp::Orphan< ::capnzero::ID> disownReceiverID();

  inline bool hasRobotIds();
  inline  ::capnp::List< ::capnzero::ID>::Builder getRobotIds();
  inline void setRobotIds( ::capnp::List< ::capnzero::ID>::Reader value);
  inline  ::capnp::List< ::capnzero::ID>::Builder initRobotIds(unsigned int size);
  inline void adoptRobotIds(::capnp::Orphan< ::capnp::List< ::capnzero::ID>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnzero::ID>> disownRobotIds();

  inline bool hasProcessKeys();
  inline  ::capnp::List< ::int32_t>::Builder getProcessKeys();
  inline void setProcessKeys( ::capnp::List< ::int32_t>::Reader value);
  inline void setProcessKeys(::kj::ArrayPtr<const  ::int32_t> value);
  inline  ::capnp::List< ::int32_t>::Builder initProcessKeys(unsigned int size);
  inline void adoptProcessKeys(::capnp::Orphan< ::capnp::List< ::int32_t>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::int32_t>> disownProcessKeys();

  inline bool hasParamSets();
  inline  ::capnp::List< ::int32_t>::Builder getParamSets();
  inline void setParamSets( ::capnp::List< ::int32_t>::Reader value);
  inline void setParamSets(::kj::ArrayPtr<const  ::int32_t> value);
  inline  ::capnp::List< ::int32_t>::Builder initParamSets(unsigned int size);
  inline void adoptParamSets(::capnp::Orphan< ::capnp::List< ::int32_t>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::int32_t>> disownParamSets();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ProcessCommandMsg::Pipeline {
public:
  typedef ProcessCommandMsg Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::capnzero::ID::Pipeline getSenderID();
  inline  ::capnzero::ID::Pipeline getReceiverID();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool ProcessCommandMsg::Reader::hasSenderID() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool ProcessCommandMsg::Builder::hasSenderID() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnzero::ID::Reader ProcessCommandMsg::Reader::getSenderID() const {
  return ::capnp::_::PointerHelpers< ::capnzero::ID>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnzero::ID::Builder ProcessCommandMsg::Builder::getSenderID() {
  return ::capnp::_::PointerHelpers< ::capnzero::ID>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::capnzero::ID::Pipeline ProcessCommandMsg::Pipeline::getSenderID() {
  return  ::capnzero::ID::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void ProcessCommandMsg::Builder::setSenderID( ::capnzero::ID::Reader value) {
  ::capnp::_::PointerHelpers< ::capnzero::ID>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnzero::ID::Builder ProcessCommandMsg::Builder::initSenderID() {
  return ::capnp::_::PointerHelpers< ::capnzero::ID>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void ProcessCommandMsg::Builder::adoptSenderID(
    ::capnp::Orphan< ::capnzero::ID>&& value) {
  ::capnp::_::PointerHelpers< ::capnzero::ID>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnzero::ID> ProcessCommandMsg::Builder::disownSenderID() {
  return ::capnp::_::PointerHelpers< ::capnzero::ID>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint8_t ProcessCommandMsg::Reader::getCmd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t ProcessCommandMsg::Builder::getCmd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void ProcessCommandMsg::Builder::setCmd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool ProcessCommandMsg::Reader::hasReceiverID() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool ProcessCommandMsg::Builder::hasReceiverID() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnzero::ID::Reader ProcessCommandMsg::Reader::getReceiverID() const {
  return ::capnp::_::PointerHelpers< ::capnzero::ID>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnzero::ID::Builder ProcessCommandMsg::Builder::getReceiverID() {
  return ::capnp::_::PointerHelpers< ::capnzero::ID>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::capnzero::ID::Pipeline ProcessCommandMsg::Pipeline::getReceiverID() {
  return  ::capnzero::ID::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void ProcessCommandMsg::Builder::setReceiverID( ::capnzero::ID::Reader value) {
  ::capnp::_::PointerHelpers< ::capnzero::ID>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnzero::ID::Builder ProcessCommandMsg::Builder::initReceiverID() {
  return ::capnp::_::PointerHelpers< ::capnzero::ID>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void ProcessCommandMsg::Builder::adoptReceiverID(
    ::capnp::Orphan< ::capnzero::ID>&& value) {
  ::capnp::_::PointerHelpers< ::capnzero::ID>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnzero::ID> ProcessCommandMsg::Builder::disownReceiverID() {
  return ::capnp::_::PointerHelpers< ::capnzero::ID>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool ProcessCommandMsg::Reader::hasRobotIds() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool ProcessCommandMsg::Builder::hasRobotIds() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnzero::ID>::Reader ProcessCommandMsg::Reader::getRobotIds() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnzero::ID>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnzero::ID>::Builder ProcessCommandMsg::Builder::getRobotIds() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnzero::ID>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void ProcessCommandMsg::Builder::setRobotIds( ::capnp::List< ::capnzero::ID>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnzero::ID>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnzero::ID>::Builder ProcessCommandMsg::Builder::initRobotIds(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnzero::ID>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void ProcessCommandMsg::Builder::adoptRobotIds(
    ::capnp::Orphan< ::capnp::List< ::capnzero::ID>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnzero::ID>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnzero::ID>> ProcessCommandMsg::Builder::disownRobotIds() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnzero::ID>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool ProcessCommandMsg::Reader::hasProcessKeys() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool ProcessCommandMsg::Builder::hasProcessKeys() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::int32_t>::Reader ProcessCommandMsg::Reader::getProcessKeys() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::int32_t>::Builder ProcessCommandMsg::Builder::getProcessKeys() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void ProcessCommandMsg::Builder::setProcessKeys( ::capnp::List< ::int32_t>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline void ProcessCommandMsg::Builder::setProcessKeys(::kj::ArrayPtr<const  ::int32_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::int32_t>::Builder ProcessCommandMsg::Builder::initProcessKeys(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void ProcessCommandMsg::Builder::adoptProcessKeys(
    ::capnp::Orphan< ::capnp::List< ::int32_t>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::int32_t>> ProcessCommandMsg::Builder::disownProcessKeys() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool ProcessCommandMsg::Reader::hasParamSets() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool ProcessCommandMsg::Builder::hasParamSets() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::int32_t>::Reader ProcessCommandMsg::Reader::getParamSets() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::int32_t>::Builder ProcessCommandMsg::Builder::getParamSets() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void ProcessCommandMsg::Builder::setParamSets( ::capnp::List< ::int32_t>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline void ProcessCommandMsg::Builder::setParamSets(::kj::ArrayPtr<const  ::int32_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::int32_t>::Builder ProcessCommandMsg::Builder::initParamSets(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), size);
}
inline void ProcessCommandMsg::Builder::adoptParamSets(
    ::capnp::Orphan< ::capnp::List< ::int32_t>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::int32_t>> ProcessCommandMsg::Builder::disownParamSets() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int32_t>>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

}  // namespace

#endif  // CAPNP_INCLUDED_ae0df4f534e8b04f_
